{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.24.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@copyright",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@file",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@author",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@license",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@category",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@module",
          "syntaxKind": "block",
          "allowMultiple": true
        }
      ],
      "supportForTags": {
        "@category": true,
        "@module": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@keywork/react-isomorphic!",
  "docComment": "",
  "name": "@keywork/react-isomorphic",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@keywork/react-isomorphic!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@keywork/react-isomorphic!createContextAndNamedHook:function(1)",
          "docComment": "/**\n * A convenience wrapper around `React.createContext` that creates a context and hook for the child components within a Provider's context.\n *\n * @param defaultValue - \n *\n * @returns contextTuple\n *\n * @example\n *\n * Creating a named context Provider with a computed value.\n *\n * #### `WidgetsProvider.tsx`\n * ```tsx\n * const [WidgetsContext, useWidgetsContext] = createNamedContextHook<WidgetsProvider>()\n * // Note that the `WidgetsContext` is not exported if the provider needs additional logic.\n * export { useWidgetsContext }\n *\n * // Instead, a component is declared to pass down a computed value.\n * export const WidgetProvider: React.FC<WidgetProviderProps> = ({children}) => {\n *   // Always use a memoized value to prevent rerenders.\n *   // Some combination of props go here...\n *   const value = useMemo<WidgetsProvider>(() => ({}), [dep1, dep2, depN])\n *\n *   return <WidgetsContext.Provider value={value}>{children}</WidgetsContext.Provider>\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createContextAndNamedHook<T>(\ndefaultValue?: "
            },
            {
              "kind": "Content",
              "text": "T | undefined"
            },
            {
              "kind": "Content",
              "text": ", \ndisplayName?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly ["
            },
            {
              "kind": "Reference",
              "text": "React.Context",
              "canonicalReference": "@types/react!~React.Context:interface"
            },
            {
              "kind": "Content",
              "text": "<T | undefined>, <V = T>() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "defaultValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "displayName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createContextAndNamedHook"
        },
        {
          "kind": "Function",
          "canonicalReference": "@keywork/react-isomorphic!getSSRPropsFromScope:function(1)",
          "docComment": "/**\n * @param globalScope - In most cases, this is either `window` or `self`.\n *\n * @returns SSRProps\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSSRPropsFromScope<SSRProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">(globalScope: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "SSRProps"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "globalScope",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "SSRProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getSSRPropsFromScope"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@keywork/react-isomorphic!GetStaticPropsHandler:type",
          "docComment": "/**\n * A request handler that fetches static props for a server-side rendered React component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetStaticPropsHandler<\n/** The static props returned by the handler. */\nStaticProps extends "
            },
            {
              "kind": "Content",
              "text": "{} | null"
            },
            {
              "kind": "Content",
              "text": ", BoundAliases extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ", AdditionalData extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(\ndata: "
            },
            {
              "kind": "Reference",
              "text": "IncomingRequestData",
              "canonicalReference": "@keywork/app!IncomingRequestData:interface"
            },
            {
              "kind": "Content",
              "text": "<BoundAliases>, \nadditionalData?: AdditionalData) => StaticProps | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<StaticProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetStaticPropsHandler",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "BoundAliases",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "AdditionalData",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 11,
            "endIndex": 16
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@keywork/react-isomorphic!globalScopeHasSSRProps:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function globalScopeHasSSRProps<SSRProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">(globalScope: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "globalScope",
              "canonicalReference": "@keywork/react-isomorphic!~globalScope"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "GlobalScopeWithKeyworkSSRProps",
              "canonicalReference": "@keywork/react-isomorphic!GlobalScopeWithKeyworkSSRProps:interface"
            },
            {
              "kind": "Content",
              "text": "<SSRProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "globalScope",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "SSRProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "globalScopeHasSSRProps"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@keywork/react-isomorphic!GlobalScopeSSRKey:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GlobalScopeSSRKey = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "globalScopeSSRKey",
              "canonicalReference": "@keywork/react-isomorphic!globalScopeSSRKey:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GlobalScopeSSRKey",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!globalScopeSSRKey:var",
          "docComment": "/**\n * The global key where SSR props are assigned.\n *\n * @remarks\n *\n * This includes a space to prevent autocomplete from listing this key.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "globalScopeSSRKey = \"__ keywork_ssr_props\""
            }
          ],
          "releaseTag": "Public",
          "name": "globalScopeSSRKey",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!GlobalScopeWithKeyworkSSRProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GlobalScopeWithKeyworkSSRProps<SSRProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GlobalScopeSSRKey",
              "canonicalReference": "@keywork/react-isomorphic!GlobalScopeSSRKey:type"
            },
            {
              "kind": "Content",
              "text": ", SSRProps> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SSRProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "GlobalScopeWithKeyworkSSRProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!GlobalScopeWithKeyworkSSRProps#document:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "document?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "document",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!GlobalScopeWithKeyworkSSRProps#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@keywork/react-isomorphic!hydrateKeyworkApp:function(1)",
          "docComment": "/**\n * Hydrates a server-side rendered React component.\n *\n * @remarks\n *\n * This should only run in the browser.\n *\n * @param initialChildren - This should be the current page's component, along with any needed providers.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hydrateKeyworkApp(initialChildren: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!~React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "HydrateKeyworkAppOptions",
              "canonicalReference": "@keywork/react-isomorphic!HydrateKeyworkAppOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react-dom/client\")."
            },
            {
              "kind": "Reference",
              "text": "Root",
              "canonicalReference": "@types/react-dom!Root:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "initialChildren",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "hydrateKeyworkApp"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!HydrateKeyworkAppOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HydrateKeyworkAppOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "HydrateKeyworkAppOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!HydrateKeyworkAppOptions#globalScope:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "globalScope?: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalScopeWithKeyworkSSRProps",
                  "canonicalReference": "@keywork/react-isomorphic!GlobalScopeWithKeyworkSSRProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "globalScope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!HydrateKeyworkAppOptions#reactHydrationOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reactHydrationOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "HydrationOptions",
                  "canonicalReference": "@types/react-dom!HydrationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reactHydrationOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!HydrateKeyworkAppOptions#rootID:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootID?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rootID",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkBrowserRouterProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkBrowserRouterProps "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkBrowserRouterProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkBrowserRouterProps#patternToPageComponent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "patternToPageComponent: "
                },
                {
                  "kind": "Reference",
                  "text": "PatternToPageComponentMap",
                  "canonicalReference": "@keywork/react-isomorphic!PatternToPageComponentMap:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "patternToPageComponent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocument:var",
          "docComment": "/**\n * A server-side render of a given HTML document.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkHTMLDocument: "
            },
            {
              "kind": "Reference",
              "text": "KeyworkHTMLDocumentComponent",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentComponent:type"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkHTMLDocument",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentComponent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KeyworkHTMLDocumentComponent = "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "KeyworkHTMLDocumentProps",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkHTMLDocumentComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkHTMLDocumentProps "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkHTMLDocumentProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#browserIdentifier:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "browserIdentifier?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "browserIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#buildId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buildId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#className:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#htmlAttributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "htmlAttributes?: "
                },
                {
                  "kind": "Reference",
                  "text": "HtmlHTMLAttributes",
                  "canonicalReference": "@types/react!~React.HtmlHTMLAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLHtmlElement",
                  "canonicalReference": "!HTMLHtmlElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "htmlAttributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#link:member",
              "docComment": "/**\n * Optional `<link>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "link?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "link",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#meta:member",
              "docComment": "/**\n * Optional `<meta>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "meta?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#moduleManifest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moduleManifest?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "moduleManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#script:member",
              "docComment": "/**\n * Optional `<script>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "script?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "script",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#style:member",
              "docComment": "/**\n * Optional `<style>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "style?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "style",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentProps#title:member",
              "docComment": "/**\n * Document title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkPatternToPageComponent:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkPatternToPageComponent: "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "KeyworkBrowserRouterProps",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkBrowserRouterProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkPatternToPageComponent",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkProviders:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkProviders: "
            },
            {
              "kind": "Reference",
              "text": "KeyworkProvidersComponent",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkProvidersComponent:type"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkProviders",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkProvidersComponent:type",
          "docComment": "/**\n * A component which wraps the current SSR routes. Use this if you need to inject a provider into the SSR pipeline.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KeyworkProvidersComponent = "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProviderWrapperProps",
              "canonicalReference": "@keywork/react-isomorphic!ProviderWrapperProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkProvidersComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkRouter:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkRouter: "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "KeyworkRouterProps",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkRouterProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkRouter",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkRouterProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkRouterProps "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkRouterProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkRouterProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkRouterProps#initialLocation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialLocation: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkRouterProvider:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkRouterProvider "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkRouterProvider",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkRouterProvider#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@keywork/react-isomorphic!KeyworkStaticPropsRequestHandler:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class KeyworkStaticPropsRequestHandler<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ", BoundAliases extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "KeyworkRequestHandler",
              "canonicalReference": "@keywork/app!KeyworkRequestHandler:class"
            },
            {
              "kind": "Content",
              "text": "<BoundAliases> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "BoundAliases",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "KeyworkStaticPropsRequestHandler",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkStaticPropsRequestHandler#DocumentComponent:member",
              "docComment": "/**\n * A HTML Document React component which wraps the entire application. Use this if you need to replace the default HTML Document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract DocumentComponent?: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyworkHTMLDocumentComponent",
                  "canonicalReference": "@keywork/react-isomorphic!KeyworkHTMLDocumentComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "DocumentComponent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkStaticPropsRequestHandler#getStaticProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract getStaticProps: "
                },
                {
                  "kind": "Reference",
                  "text": "GetStaticPropsHandler",
                  "canonicalReference": "@keywork/react-isomorphic!GetStaticPropsHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<StaticProps, BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getStaticProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkStaticPropsRequestHandler#onRequestGet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestGet: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestHandler",
                  "canonicalReference": "@keywork/app!IncomingRequestHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestGet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkStaticPropsRequestHandler#PageComponent:member",
              "docComment": "/**\n * The React component to render for this specific page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract PageComponent: "
                },
                {
                  "kind": "Reference",
                  "text": "FC",
                  "canonicalReference": "@types/react!~React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<StaticProps>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "PageComponent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkStaticPropsRequestHandler#Providers:member",
              "docComment": "/**\n * A React component which wraps the SSR routes. Use this if you need to inject a provider into the SSR pipeline.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract Providers?: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyworkProvidersComponent",
                  "canonicalReference": "@keywork/react-isomorphic!KeyworkProvidersComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "Providers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@keywork/react-isomorphic!matchRoute:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function matchRoute(patternToPageComponent: "
            },
            {
              "kind": "Reference",
              "text": "PatternToPageComponentMap",
              "canonicalReference": "@keywork/react-isomorphic!PatternToPageComponentMap:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", location: "
            },
            {
              "kind": "Reference",
              "text": "URL",
              "canonicalReference": "!URL:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"@keywork/app\")."
            },
            {
              "kind": "Reference",
              "text": "PathMatch",
              "canonicalReference": "@keywork/app!PathMatch:interface"
            },
            {
              "kind": "Content",
              "text": "<{} | null> | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "patternToPageComponent",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "location",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "matchRoute"
        },
        {
          "kind": "Class",
          "canonicalReference": "@keywork/react-isomorphic!PatternToPageComponentMap:class",
          "docComment": "/**\n * A **client-side** mapping of path patterns to their respective page components. This is useful if your app bundles all React route handlers into a single Worker. *\n *\n * @example\n *\n * A collection of patterns to their respective React components.\n * ```ts\n * // Order your routes from most to least specific:\n * export const routeRecords = new PatternToPageComponentMap<any>([\n *   ['/todos/:todoSlug/:subTaskSlug/', TodoSubTaskPage],\n *   ['/todos/:todoSlug/', TodoPage],\n *   ['/todos/', TodosIndexPage],\n *   ['/about/', AboutPage],\n *   ['/privacy/', PrivacyPage],\n *   ['/', IndexPage],\n *   ['*', NotFoundErrorPage],\n * ])\n * ```\n *\n * :::caution While this type allows `PathPattern` objects, this matching isn't yet fully supported.\n *\n * :::\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PatternToPageComponentMap<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PathPattern",
              "canonicalReference": "@keywork/app!PathPattern:interface"
            },
            {
              "kind": "Content",
              "text": " | string, "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<StaticProps>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "PatternToPageComponentMap",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!ProviderWrapperProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ProviderWrapperProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ProviderWrapperProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!ProviderWrapperProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SSRPropsLike = "
            },
            {
              "kind": "Content",
              "text": "{} | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SSRPropsLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!SSRProviderProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SSRProviderProps<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SSRProviderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!SSRProviderProps#staticProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "staticProps: "
                },
                {
                  "kind": "Content",
                  "text": "StaticProps"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "staticProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@keywork/react-isomorphic!StaticPropsProvider:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StaticPropsProvider<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "StaticPropsProvider",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!StaticPropsProvider#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@keywork/react-isomorphic!StaticPropsProvider#staticProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "staticProps: "
                },
                {
                  "kind": "Content",
                  "text": "StaticProps"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "staticProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!StaticPropsProvider:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StaticPropsProvider: "
            },
            {
              "kind": "Reference",
              "text": "StaticPropsProviderComponent",
              "canonicalReference": "@keywork/react-isomorphic!StaticPropsProviderComponent:type"
            }
          ],
          "releaseTag": "Public",
          "name": "StaticPropsProvider",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@keywork/react-isomorphic!StaticPropsProviderComponent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StaticPropsProviderComponent<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StaticPropsProvider",
              "canonicalReference": "@keywork/react-isomorphic!StaticPropsProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<StaticProps>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StaticPropsProviderComponent",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 11,
            "endIndex": 15
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!useKeyworkRouter:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useKeyworkRouter: "
            },
            {
              "kind": "Content",
              "text": "<V = "
            },
            {
              "kind": "Reference",
              "text": "KeyworkRouterProvider",
              "canonicalReference": "@keywork/react-isomorphic!KeyworkRouterProvider:interface"
            },
            {
              "kind": "Content",
              "text": ">() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>"
            }
          ],
          "releaseTag": "Public",
          "name": "useKeyworkRouter",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!useMatch:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useMatch: "
            },
            {
              "kind": "Content",
              "text": "<V = "
            },
            {
              "kind": "Reference",
              "text": "PathMatch",
              "canonicalReference": "@keywork/app!PathMatch:interface"
            },
            {
              "kind": "Content",
              "text": "<{} | null> | null>() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>"
            }
          ],
          "releaseTag": "Public",
          "name": "useMatch",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@keywork/react-isomorphic!useStaticProps:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useStaticProps: "
            },
            {
              "kind": "Content",
              "text": "<V = "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "@keywork/react-isomorphic!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>"
            }
          ],
          "releaseTag": "Public",
          "name": "useStaticProps",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        }
      ]
    }
  ]
}
