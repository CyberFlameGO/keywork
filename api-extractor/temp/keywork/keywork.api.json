{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.25.0",
    "schemaVersion": 1006,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@copyright",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@file",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@author",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@license",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@category",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@module",
          "syntaxKind": "block",
          "allowMultiple": true
        }
      ],
      "supportForTags": {
        "@category": true,
        "@module": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "keywork!",
  "docComment": "",
  "name": "keywork",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "keywork!",
      "name": "",
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!_HTTPMethod:type",
          "docComment": "/**\n * @remarks\n *\n * Keywork is free software for non-commercial purposes. You can be released from the requirements of the license by purchasing a commercial license. Buying such a license is mandatory as soon as you develop commercial activities involving the Keywork software without disclosing the source code of your own applications.\n *\n * @file\n *\n * This file is part of the Keywork project.\n *\n * @copyright\n *\n * Nirrius, LLC. All rights reserved.\n *\n * @author\n *\n * Teffen Ellis, et al.\n *\n * @license\n *\n * AGPL-3.0\n *\n * @see\n *\n * LICENSE.md in the project root for further licensing information.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type _HTTPMethod = "
            },
            {
              "kind": "Content",
              "text": "'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'HEAD' | 'OPTIONS'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "_HTTPMethod",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "keywork!_KeyworkRequestHandlerBase:class",
          "docComment": "/**\n * An extendable base class for handling incoming requests from a Worker.\n *\n * @ignore  @protected\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class _KeyworkRequestHandlerBase<BoundAliases extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "BoundAliases",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "_KeyworkRequestHandlerBase",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#fetch:member(1)",
              "docComment": "/**\n * The Worker's primary incoming fetch handler.\n *\n * @remarks\n *\n * This delegates to a method-specfic handler you define, such as `onGetRequest`. Generally, `KeyworkRequestHandler#fetch` should not be used within your app. This is instead automatically called by the Worker runtime when an incoming request is received.\n *\n * @protected\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected fetch(\n    request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "!Request:interface"
                },
                {
                  "kind": "Content",
                  "text": ", \n    env: "
                },
                {
                  "kind": "Content",
                  "text": "BoundAliases"
                },
                {
                  "kind": "Content",
                  "text": ", \n    context: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionContext",
                  "canonicalReference": "!ExecutionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "fetch"
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#logger:member",
              "docComment": "/**\n * A server-side logger.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger: "
                },
                {
                  "kind": "Reference",
                  "text": "PrefixedLogger",
                  "canonicalReference": "@keywork/utils!PrefixedLogger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequest:member",
              "docComment": "/**\n * An incoming request handler for all HTTP methods.\n *\n * @remarks\n *\n * This will always be a **lower priority** than an explicitly defined method handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequestDelete:member",
              "docComment": "/**\n * An incoming `DELETE` request handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestDelete: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestDelete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequestGet:member",
              "docComment": "/**\n * An incoming `GET` request handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestGet: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestGet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequestHead:member",
              "docComment": "/**\n * An incoming `HEAD` request handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestHead: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestHead",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequestOptions:member",
              "docComment": "/**\n * An incoming `OPTIONS` request handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequestPatch:member",
              "docComment": "/**\n * An incoming `PATCH` request handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestPatch: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestPatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequestPost:member",
              "docComment": "/**\n * An incoming `POST` request handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestPost: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestPost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#onRequestPut:member",
              "docComment": "/**\n * An incoming `PUT` request handler.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestPut: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestDataHandler",
                  "canonicalReference": "keywork!IncomingRequestDataHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequestPut",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase#pattern:member",
              "docComment": "/**\n * @deprecated\n *\n * This property should be defined as a static member. Did you mean `static pattern = '/:foo/:bar/:baz'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly pattern: "
                },
                {
                  "kind": "Content",
                  "text": "never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pattern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase.pattern:member",
              "docComment": "/**\n * A `path-to-regexp` style pattern.\n *\n * @see\n *\n * {@link https://www.npmjs.com/package/path-to-regexp NPM Package}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static pattern: "
                },
                {
                  "kind": "Reference",
                  "text": "PathPattern",
                  "canonicalReference": "@keywork/utils!PathPattern:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pattern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": true,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!createContextAndNamedHook:function(1)",
          "docComment": "/**\n * A convenience wrapper around `React.createContext` that creates a context and hook for the child components within a Provider's context.\n *\n * @param defaultValue - \n *\n * @returns contextTuple\n *\n * @example\n *\n * Creating a named context Provider with a computed value.\n * ```tsx title=WidgetsProvider.tsx\n * const [WidgetsContext, useWidgetsContext] = createNamedContextHook<WidgetsProvider>()\n * // Note that the `WidgetsContext` is not exported if the provider needs additional logic.\n * export { useWidgetsContext }\n *\n * // Instead, a component is declared to pass down a computed value.\n * export const WidgetProvider: React.FC<WidgetProviderProps> = ({children}) => {\n *   // Always use a memoized value to prevent rerenders.\n *   // Some combination of props go here...\n *   const value = useMemo<WidgetsProvider>(() => ({}), [dep1, dep2, depN])\n *\n *   return <WidgetsContext.Provider value={value}>{children}</WidgetsContext.Provider>\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createContextAndNamedHook<T>(\ndefaultValue?: "
            },
            {
              "kind": "Content",
              "text": "T | undefined"
            },
            {
              "kind": "Content",
              "text": ", \ndisplayName?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly ["
            },
            {
              "kind": "Reference",
              "text": "React.Context",
              "canonicalReference": "@types/react!~React.Context:interface"
            },
            {
              "kind": "Content",
              "text": "<T | undefined>, <V = T>() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "defaultValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "displayName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createContextAndNamedHook"
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!DEFAULT_SESSION_COOKIE_KEY:var",
          "docComment": "/**\n * @remarks\n *\n * Keywork is free software for non-commercial purposes. You can be released from the requirements of the license by purchasing a commercial license. Buying such a license is mandatory as soon as you develop commercial activities involving the Keywork software without disclosing the source code of your own applications.\n *\n * @file\n *\n * This file is part of the Keywork project.\n *\n * @copyright\n *\n * Nirrius, LLC. All rights reserved.\n *\n * @author\n *\n * Teffen Ellis, et al.\n *\n * @license\n *\n * AGPL-3.0\n *\n * @see\n *\n * LICENSE.md in the project root for further licensing information.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_SESSION_COOKIE_KEY = \"_keyworkSessionID\""
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DEFAULT_SESSION_COOKIE_KEY",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!DefaultWorkerBindings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DefaultWorkerBindings = "
            },
            {
              "kind": "Reference",
              "text": "WorkersSiteStaticContentBinding",
              "canonicalReference": "keywork!WorkersSiteStaticContentBinding:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "WorkersPagesAssetsBinding",
              "canonicalReference": "keywork!WorkersPagesAssetsBinding:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DefaultWorkerBindings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!EnvironmentBindingKinds:type",
          "docComment": "/**\n * Either:\n *\n * - `WorkerEnvFetchBinding` A `fetch` binding, usually an asset KV or external Worker. - `KVNamespace` A KV binding. - `DurableObjectNamespace` A Durable Object.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EnvironmentBindingKinds = "
            },
            {
              "kind": "Reference",
              "text": "WorkerEnvFetchBinding",
              "canonicalReference": "keywork!WorkerEnvFetchBinding:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "KVNamespace",
              "canonicalReference": "!KVNamespace:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DurableObjectNamespace",
              "canonicalReference": "!DurableObjectNamespace:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EnvironmentBindingKinds",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!getSSRPropsFromScope:function(1)",
          "docComment": "/**\n * @param globalScope - In most cases, this is either `window` or `self`.\n *\n * @returns SSRProps\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSSRPropsFromScope<SSRProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">(globalScope: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "SSRProps"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "globalScope",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "SSRProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getSSRPropsFromScope"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!GetStaticPropsHandler:type",
          "docComment": "/**\n * A request handler that fetches static props for a server-side rendered React component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetStaticPropsHandler<\n/** The static props returned by the handler. */\nStaticProps extends "
            },
            {
              "kind": "Content",
              "text": "{} | null"
            },
            {
              "kind": "Content",
              "text": ", BoundAliases extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ", AdditionalData extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(\ndata: "
            },
            {
              "kind": "Reference",
              "text": "IncomingRequestData",
              "canonicalReference": "keywork!IncomingRequestData:interface"
            },
            {
              "kind": "Content",
              "text": "<BoundAliases>, \nadditionalData?: AdditionalData) => StaticProps | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<StaticProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetStaticPropsHandler",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "BoundAliases",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "AdditionalData",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 11,
            "endIndex": 16
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!globalScopeHasSSRProps:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function globalScopeHasSSRProps<SSRProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">(globalScope: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "globalScope",
              "canonicalReference": "keywork!~globalScope"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "GlobalScopeWithKeyworkSSRProps",
              "canonicalReference": "keywork!GlobalScopeWithKeyworkSSRProps:interface"
            },
            {
              "kind": "Content",
              "text": "<SSRProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "globalScope",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "SSRProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "globalScopeHasSSRProps"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!GlobalScopeSSRKey:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GlobalScopeSSRKey = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "globalScopeSSRKey",
              "canonicalReference": "keywork!globalScopeSSRKey:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GlobalScopeSSRKey",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!globalScopeSSRKey:var",
          "docComment": "/**\n * The global key where SSR props are assigned.\n *\n * @remarks\n *\n * This includes a space to prevent autocomplete from listing this key.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "globalScopeSSRKey = \"__ keywork_ssr_props\""
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "globalScopeSSRKey",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!GlobalScopeWithKeyworkSSRProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GlobalScopeWithKeyworkSSRProps<SSRProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GlobalScopeSSRKey",
              "canonicalReference": "keywork!GlobalScopeSSRKey:type"
            },
            {
              "kind": "Content",
              "text": ", SSRProps> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SSRProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "GlobalScopeWithKeyworkSSRProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!GlobalScopeWithKeyworkSSRProps#document:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "document?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "document",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!GlobalScopeWithKeyworkSSRProps#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!hydrateKeyworkApp:function(1)",
          "docComment": "/**\n * Hydrates a server-side rendered React component.\n *\n * @remarks\n *\n * This should only run in the browser.\n *\n * @param initialChildren - This should be the current page's component, along with any needed providers.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hydrateKeyworkApp(initialChildren: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!~React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "HydrateKeyworkAppOptions",
              "canonicalReference": "keywork!HydrateKeyworkAppOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react-dom/client\")."
            },
            {
              "kind": "Reference",
              "text": "Root",
              "canonicalReference": "@types/react-dom!Root:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "initialChildren",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "hydrateKeyworkApp"
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!HydrateKeyworkAppOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HydrateKeyworkAppOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "HydrateKeyworkAppOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!HydrateKeyworkAppOptions#globalScope:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "globalScope?: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalScopeWithKeyworkSSRProps",
                  "canonicalReference": "keywork!GlobalScopeWithKeyworkSSRProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "globalScope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!HydrateKeyworkAppOptions#reactHydrationOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reactHydrationOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "HydrationOptions",
                  "canonicalReference": "@types/react-dom!HydrationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reactHydrationOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!HydrateKeyworkAppOptions#rootID:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootID?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rootID",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!IncomingRequestData:interface",
          "docComment": "/**\n * Data associated with a specific incoming request from within a Worker.\n *\n * @remark Much like defining functions in Cloudflare Pages, this interface contains all the data related to a specific incoming HTTP request. Generally, this interface is always generated by `KeyworkRequestHandler` and passed to your subclass' `onRequest` method.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IncomingRequestData<BoundAliases extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "BoundAliases",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "IncomingRequestData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!IncomingRequestData#context:member",
              "docComment": "/**\n * An execution context for running async tasks after the response is sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly context: "
                },
                {
                  "kind": "Reference",
                  "text": "ExecutionContext",
                  "canonicalReference": "!ExecutionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!IncomingRequestData#env:member",
              "docComment": "/**\n * Any bound environment properties defined in your `wrangler.toml` file\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly env: "
                },
                {
                  "kind": "Content",
                  "text": "BoundAliases extends null ? "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultWorkerBindings",
                  "canonicalReference": "keywork!DefaultWorkerBindings:type"
                },
                {
                  "kind": "Content",
                  "text": " : BoundAliases & "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultWorkerBindings",
                  "canonicalReference": "keywork!DefaultWorkerBindings:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "env",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!IncomingRequestData#request:member",
              "docComment": "/**\n * The incoming request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly request: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestWithCFProperties",
                  "canonicalReference": "keywork!RequestWithCFProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "request",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!IncomingRequestData#session:member",
              "docComment": "/**\n * This is under active development.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly session: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyworkSession",
                  "canonicalReference": "keywork!KeyworkSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!IncomingRequestData#url:member",
              "docComment": "/**\n * The incoming request URL object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly url: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!IncomingRequestDataHandler:type",
          "docComment": "/**\n * An method interface which handles incoming requests from the client, to return a `Response` object.\n *\n * @remark Generally, this interface is implemented by a subclass of `KeyworkRequestHandler` such as `onRequest`, `onGetRequest`, `onPostRequest`, etc.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IncomingRequestDataHandler<BoundAliases extends "
            },
            {
              "kind": "Content",
              "text": "{} | null"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(\ndata: "
            },
            {
              "kind": "Reference",
              "text": "IncomingRequestData",
              "canonicalReference": "keywork!IncomingRequestData:interface"
            },
            {
              "kind": "Content",
              "text": "<BoundAliases>) => "
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "!Response:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "!Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IncomingRequestDataHandler",
          "typeParameters": [
            {
              "typeParameterName": "BoundAliases",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 12
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "keywork!KeyworkAssetHandler:class",
          "docComment": "/**\n * Handles incoming requests for static assets uploaded to Cloudflare KV. This is under active development\n *\n * @category\n *\n * {Static Asset Management}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class KeyworkAssetHandler extends "
            },
            {
              "kind": "Reference",
              "text": "KeyworkRequestHandler",
              "canonicalReference": "keywork!KeyworkRequestHandler:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "WorkersSiteStaticContentBinding",
              "canonicalReference": "keywork!WorkersSiteStaticContentBinding:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "name": "KeyworkAssetHandler",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "keywork!KeyworkAssetHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `KeyworkAssetHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(rawAssetManifest: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawAssetManifest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkAssetHandler#assetManifest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected assetManifest: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetManifestType",
                  "canonicalReference": "@cloudflare/kv-asset-handler!AssetManifestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "assetManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkAssetHandler#onRequestGet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequestGet: "
                },
                {
                  "kind": "Content",
                  "text": "({ env, request, context }: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestData",
                  "canonicalReference": "keywork!IncomingRequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WorkersSiteStaticContentBinding",
                  "canonicalReference": "keywork!WorkersSiteStaticContentBinding:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "onRequestGet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!KeyworkBrowserRouterProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkBrowserRouterProps "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkBrowserRouterProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkBrowserRouterProps#patternToPageComponent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "patternToPageComponent: "
                },
                {
                  "kind": "Reference",
                  "text": "PatternToPageComponentMap",
                  "canonicalReference": "keywork!PatternToPageComponentMap:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "patternToPageComponent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!KeyworkHTMLDocument:var",
          "docComment": "/**\n * A server-side render of a given HTML document.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkHTMLDocument: "
            },
            {
              "kind": "Reference",
              "text": "KeyworkHTMLDocumentComponent",
              "canonicalReference": "keywork!KeyworkHTMLDocumentComponent:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "KeyworkHTMLDocument",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!KeyworkHTMLDocumentComponent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KeyworkHTMLDocumentComponent = "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "KeyworkHTMLDocumentProps",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkHTMLDocumentComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!KeyworkHTMLDocumentProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkHTMLDocumentProps "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkHTMLDocumentProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#browserIdentifier:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "browserIdentifier?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "browserIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#buildId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buildId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#className:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#htmlAttributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "htmlAttributes?: "
                },
                {
                  "kind": "Reference",
                  "text": "HtmlHTMLAttributes",
                  "canonicalReference": "@types/react!~React.HtmlHTMLAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLHtmlElement",
                  "canonicalReference": "!HTMLHtmlElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "htmlAttributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#link:member",
              "docComment": "/**\n * Optional `<link>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "link?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "link",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#meta:member",
              "docComment": "/**\n * Optional `<meta>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "meta?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#moduleManifest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moduleManifest?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "moduleManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#script:member",
              "docComment": "/**\n * Optional `<script>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "script?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "script",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#style:member",
              "docComment": "/**\n * Optional `<style>` tags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "style?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactFragment",
                  "canonicalReference": "@types/react!~React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "style",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkHTMLDocumentProps#title:member",
              "docComment": "/**\n * Document title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!KeyworkPatternToPageComponent:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkPatternToPageComponent: "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "KeyworkBrowserRouterProps",
              "canonicalReference": "keywork!KeyworkBrowserRouterProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "KeyworkPatternToPageComponent",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!KeyworkProviders:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkProviders: "
            },
            {
              "kind": "Reference",
              "text": "KeyworkProvidersComponent",
              "canonicalReference": "keywork!KeyworkProvidersComponent:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "KeyworkProviders",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!KeyworkProvidersComponent:type",
          "docComment": "/**\n * A component which wraps the current SSR routes. Use this if you need to inject a provider into the SSR pipeline.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KeyworkProvidersComponent = "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProviderWrapperProps",
              "canonicalReference": "keywork!ProviderWrapperProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkProvidersComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "keywork!KeyworkRequestHandler:class",
          "docComment": "/**\n * An extendable base class for handling incoming requests from a Worker.\n *\n * In the \"Module Worker\" format, incoming HTTP events are handled by defining and exporting an object with method handlers corresponding to event names.\n *\n * To create a route handler, start by first extending the `KeyworkRequestHandler` class. Your implementation must at least include a `onRequestGet` handler, or a method-agnostic `onRequest` handler.\n *\n * - Always attempt to handle runtime errors gracefully, and respond with `KeyworkResourceError` when necessary.\n *\n * @category\n *\n * Incoming Request Handlers\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class KeyworkRequestHandler<BoundAliases extends "
            },
            {
              "kind": "Content",
              "text": "{} | null "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ", StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "_KeyworkRequestHandlerBase",
              "canonicalReference": "keywork!_KeyworkRequestHandlerBase:class"
            },
            {
              "kind": "Content",
              "text": "<BoundAliases> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "BoundAliases",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            }
          ],
          "name": "KeyworkRequestHandler",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkRequestHandler#DocumentComponent:member",
              "docComment": "/**\n * A HTML Document React component which wraps the entire application. Use this if you need to replace the default HTML Document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected DocumentComponent?: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyworkHTMLDocumentComponent",
                  "canonicalReference": "keywork!KeyworkHTMLDocumentComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "DocumentComponent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkRequestHandler#getStaticProps:member",
              "docComment": "/**\n * A method used to fetch static props for rendering React apps in your worker.\n *\n * @example\n * ```ts\n * import { KeyworkRequestHandler, GetStaticPropsHandler } from 'keywork'\n * import { StaticTodoPageProps, TodoPage } from './TodoPage.tsx'\n *\n * export class TodoWorker extends KeyworkRequestHandler<null, StaticTodoPageProps> {\n *   // A URL path pattern...\n *   static readonly pattern = '/todos/:todoID/'\n *   // And our React component from earlier.\n *   PageComponent = TodoPage\n *\n *   async getStaticProps({ request }: IncomingRequestData): Promise<StaticTodoPageProps> {\n *     // Attempt to get our params from the request...\n *     const { params } = parsePathname<TodoRouteParams>(TodoWorker.pattern, request)\n *     // \"Search\" the database for a match...\n *     const todoItem = exampleTodos[params.todoID]\n *\n *     if (!todoItem) {\n *       return new ErrorResponse(`Todo with ID ${todoItem} does not exist`, 404)\n *     }\n *\n *     // Return the expected static props!\n *     return {\n *       todoItem,\n *     }\n *   }\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStaticProps?: "
                },
                {
                  "kind": "Content",
                  "text": "(data: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestData",
                  "canonicalReference": "keywork!IncomingRequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": "<BoundAliases>) => "
                },
                {
                  "kind": "Reference",
                  "text": "PossiblePromise",
                  "canonicalReference": "keywork!PossiblePromise:type"
                },
                {
                  "kind": "Content",
                  "text": "<StaticProps>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "getStaticProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkRequestHandler#PageComponent:member",
              "docComment": "/**\n * The React component to render for this specific page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected PageComponent?: "
                },
                {
                  "kind": "Reference",
                  "text": "FC",
                  "canonicalReference": "@types/react!~React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<StaticProps>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "PageComponent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkRequestHandler#Providers:member",
              "docComment": "/**\n * A React component which wraps the SSR routes. Use this if you need to inject a provider into the SSR pipeline.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected Providers?: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyworkProvidersComponent",
                  "canonicalReference": "keywork!KeyworkProvidersComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "Providers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!KeyworkRouter:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyworkRouter: "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "KeyworkRouterProps",
              "canonicalReference": "keywork!KeyworkRouterProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "KeyworkRouter",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!KeyworkRouterProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkRouterProps "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkRouterProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkRouterProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkRouterProps#initialLocation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialLocation: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!KeyworkRouterProvider:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyworkRouterProvider "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyworkRouterProvider",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!KeyworkRouterProvider#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "keywork!KeyworkSession:class",
          "docComment": "/**\n * A simple session manager to aid in authenticating users.\n *\n * @category\n *\n * Sessions & Cookies\n *\n * This is under active development.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class KeyworkSession "
            }
          ],
          "releaseTag": "Beta",
          "name": "KeyworkSession",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "keywork!KeyworkSession:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `KeyworkSession` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "!Request:interface"
                },
                {
                  "kind": "Content",
                  "text": ", cookieKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cookieKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "keywork!KeyworkSession#assignSessionHeaders:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assignSessionHeaders(headers: "
                },
                {
                  "kind": "Reference",
                  "text": "Headers",
                  "canonicalReference": "!Headers:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "headers",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "assignSessionHeaders"
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkSession#cookieKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cookieKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "cookieKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkSession#isNewSession:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isNewSession: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "isNewSession",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!KeyworkSession#sessionID:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionID: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "sessionID",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!matchRoute:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function matchRoute(patternToPageComponent: "
            },
            {
              "kind": "Reference",
              "text": "PatternToPageComponentMap",
              "canonicalReference": "keywork!PatternToPageComponentMap:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", location: "
            },
            {
              "kind": "Reference",
              "text": "URL",
              "canonicalReference": "!URL:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"keywork\")."
            },
            {
              "kind": "Reference",
              "text": "PathMatch",
              "canonicalReference": "@keywork/utils!PathMatch:interface"
            },
            {
              "kind": "Content",
              "text": "<{} | null> | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "patternToPageComponent",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "location",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "matchRoute"
        },
        {
          "kind": "Class",
          "canonicalReference": "keywork!PatternToPageComponentMap:class",
          "docComment": "/**\n * A **client-side** mapping of path patterns to their respective page components. This is useful if your app bundles all React route handlers into a single Worker. *\n *\n * @example\n *\n * A collection of patterns to their respective React components.\n * ```ts\n * // Order your routes from most to least specific:\n * export const routeRecords = new PatternToPageComponentMap<any>([\n *   ['/todos/:todoSlug/:subTaskSlug/', TodoSubTaskPage],\n *   ['/todos/:todoSlug/', TodoPage],\n *   ['/todos/', TodosIndexPage],\n *   ['/about/', AboutPage],\n *   ['/privacy/', PrivacyPage],\n *   ['/', IndexPage],\n *   ['*', NotFoundErrorPage],\n * ])\n * ```\n *\n * :::caution While this type allows `PathPattern` objects, this matching isn't yet fully supported.\n *\n * :::\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PatternToPageComponentMap<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PathPattern",
              "canonicalReference": "@keywork/utils!PathPattern:interface"
            },
            {
              "kind": "Content",
              "text": " | string, "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<StaticProps>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "PatternToPageComponentMap",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!PossiblePromise:type",
          "docComment": "/**\n * A value that may be returned wrapped in a Promise\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PossiblePromise<T> = "
            },
            {
              "kind": "Content",
              "text": "T | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PossiblePromise",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!ProviderWrapperProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ProviderWrapperProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ProviderWrapperProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!ProviderWrapperProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!ReactRenderStreamErrorResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReactRenderStreamErrorResult "
            }
          ],
          "releaseTag": "Public",
          "name": "ReactRenderStreamErrorResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!ReactRenderStreamErrorResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Reference",
                  "text": "KeyworkResourceError",
                  "canonicalReference": "@keywork/utils!KeyworkResourceError:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!ReactRenderStreamErrorResult#stream:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stream: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactDOMServerReadableStream",
                  "canonicalReference": "@types/react-dom!ReactDOMServerReadableStream:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stream",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!ReactRenderStreamResult:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReactRenderStreamResult = "
            },
            {
              "kind": "Reference",
              "text": "ReactRenderStreamSuccessResult",
              "canonicalReference": "keywork!ReactRenderStreamSuccessResult:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ReactRenderStreamErrorResult",
              "canonicalReference": "keywork!ReactRenderStreamErrorResult:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReactRenderStreamResult",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!ReactRenderStreamSuccessResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReactRenderStreamSuccessResult "
            }
          ],
          "releaseTag": "Public",
          "name": "ReactRenderStreamSuccessResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!ReactRenderStreamSuccessResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!ReactRenderStreamSuccessResult#stream:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stream: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactDOMServerReadableStream",
                  "canonicalReference": "@types/react-dom!ReactDOMServerReadableStream:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stream",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "keywork!RedirectHandler:class",
          "docComment": "/**\n * A higher-order function for redirecting requests via `KeyworkRequestHandler`.\n *\n * @returns The incoming request handler.\n *\n * @example\n *\n * Creating a Worker that just redirects incoming requests.\n * ```ts\n * const redirectToExample = new RedirectHandler('https://example.com')\n *\n * export default redirectToExample\n * ```\n *\n * @category\n *\n * Incoming Request Handlers\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class RedirectHandler extends "
            },
            {
              "kind": "Reference",
              "text": "KeyworkRequestHandler",
              "canonicalReference": "keywork!KeyworkRequestHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "RedirectHandler",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "keywork!RedirectHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `RedirectHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n    destinationURL: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ", \n    statusCode?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "destinationURL",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "statusCode",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!RedirectHandler#destinationURL:member",
              "docComment": "/**\n * URL A url-like string or URL object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destinationURL: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "destinationURL",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!RedirectHandler#onRequest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRequest: "
                },
                {
                  "kind": "Content",
                  "text": "({ request }: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestData",
                  "canonicalReference": "keywork!IncomingRequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "keywork!RedirectHandler#statusCode:member",
              "docComment": "/**\n * An optional status code. Defaults to `302`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statusCode: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "statusCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!renderReactStream:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function renderReactStream(children: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!~React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "RenderToReadableStreamOptions",
              "canonicalReference": "@types/react-dom!RenderToReadableStreamOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReactRenderStreamResult",
              "canonicalReference": "keywork!ReactRenderStreamResult:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "children",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "renderReactStream"
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!renderStaticPropsAsComponentStream:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function renderStaticPropsAsComponentStream<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ">(request: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "!Request:interface"
            },
            {
              "kind": "Content",
              "text": ", staticProps: "
            },
            {
              "kind": "Content",
              "text": "StaticProps"
            },
            {
              "kind": "Content",
              "text": ", \nPageComponent: "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<StaticProps>"
            },
            {
              "kind": "Content",
              "text": ", DocumentComponent?: "
            },
            {
              "kind": "Reference",
              "text": "KeyworkHTMLDocumentComponent",
              "canonicalReference": "keywork!KeyworkHTMLDocumentComponent:type"
            },
            {
              "kind": "Content",
              "text": ", Providers?: "
            },
            {
              "kind": "Reference",
              "text": "KeyworkProvidersComponent",
              "canonicalReference": "keywork!KeyworkProvidersComponent:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "!Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 17,
            "endIndex": 21
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "request",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "staticProps",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": false
            },
            {
              "parameterName": "PageComponent",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "isOptional": false
            },
            {
              "parameterName": "DocumentComponent",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "isOptional": true
            },
            {
              "parameterName": "Providers",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "renderStaticPropsAsComponentStream"
        },
        {
          "kind": "Function",
          "canonicalReference": "keywork!renderStaticPropsAsJSON:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function renderStaticPropsAsJSON(request: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "!Request:interface"
            },
            {
              "kind": "Content",
              "text": ", staticProps: "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "!Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "request",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "staticProps",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "renderStaticPropsAsJSON"
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!RequestWithCFProperties:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestWithCFProperties extends "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "!Request:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "RequestWithCFProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!RequestWithCFProperties#cf:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cf: "
                },
                {
                  "kind": "Reference",
                  "text": "IncomingRequestCfProperties",
                  "canonicalReference": "!IncomingRequestCfProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cf",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!SSRPropsLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SSRPropsLike = "
            },
            {
              "kind": "Content",
              "text": "{} | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SSRPropsLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!SSRProviderProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SSRProviderProps<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SSRProviderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!SSRProviderProps#staticProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "staticProps: "
                },
                {
                  "kind": "Content",
                  "text": "StaticProps"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "staticProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!StaticPropsProvider:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StaticPropsProvider<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "StaticPropsProvider",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!StaticPropsProvider#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!StaticPropsProvider#staticProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "staticProps: "
                },
                {
                  "kind": "Content",
                  "text": "StaticProps"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "staticProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!StaticPropsProvider:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StaticPropsProvider: "
            },
            {
              "kind": "Reference",
              "text": "StaticPropsProviderComponent",
              "canonicalReference": "keywork!StaticPropsProviderComponent:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StaticPropsProvider",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!StaticPropsProviderComponent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StaticPropsProviderComponent<StaticProps extends "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StaticPropsProvider",
              "canonicalReference": "keywork!StaticPropsProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<StaticProps>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StaticPropsProviderComponent",
          "typeParameters": [
            {
              "typeParameterName": "StaticProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 11,
            "endIndex": 15
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!useKeyworkRouter:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useKeyworkRouter: "
            },
            {
              "kind": "Content",
              "text": "<V = "
            },
            {
              "kind": "Reference",
              "text": "KeyworkRouterProvider",
              "canonicalReference": "keywork!KeyworkRouterProvider:interface"
            },
            {
              "kind": "Content",
              "text": ">() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "useKeyworkRouter",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!useMatch:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useMatch: "
            },
            {
              "kind": "Content",
              "text": "<V = "
            },
            {
              "kind": "Reference",
              "text": "PathMatch",
              "canonicalReference": "@keywork/utils!PathMatch:interface"
            },
            {
              "kind": "Content",
              "text": "<{} | null> | null>() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "useMatch",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "keywork!useStaticProps:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useStaticProps: "
            },
            {
              "kind": "Content",
              "text": "<V = "
            },
            {
              "kind": "Reference",
              "text": "SSRPropsLike",
              "canonicalReference": "keywork!SSRPropsLike:type"
            },
            {
              "kind": "Content",
              "text": ">() => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<V>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "useStaticProps",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "keywork!WorkerEnvFetchBinding:type",
          "docComment": "/**\n * An environment binding within a worker that has a `fetch` method. This usually is related to static assets uploaded to Cloudflare KV via Wrangler's Worker Sites.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type WorkerEnvFetchBinding = "
            },
            {
              "kind": "Content",
              "text": "{\n    fetch: typeof "
            },
            {
              "kind": "Reference",
              "text": "fetch",
              "canonicalReference": "!fetch:function"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "WorkerEnvFetchBinding",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!WorkersPagesAssetsBinding:interface",
          "docComment": "/**\n * An environment binding available within Worker Pages.\n *\n * @remarks\n *\n * This binding only exists in Worker __Pages__.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WorkersPagesAssetsBinding "
            }
          ],
          "releaseTag": "Public",
          "name": "WorkersPagesAssetsBinding",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!WorkersPagesAssetsBinding#__STATIC_CONTENT:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "__STATIC_CONTENT: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "__STATIC_CONTENT",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!WorkersPagesAssetsBinding#ASSETS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ASSETS: "
                },
                {
                  "kind": "Reference",
                  "text": "WorkerEnvFetchBinding",
                  "canonicalReference": "keywork!WorkerEnvFetchBinding:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ASSETS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "keywork!WorkersSiteStaticContentBinding:interface",
          "docComment": "/**\n * An environment binding available within Worker Sites. This is often used with the `@cloudflare/kv-asset-handler` package.\n *\n * @remarks\n *\n * This binding only exists in Worker __Sites__. Worker __Pages__ instead uses `env.ASSETS`\n *\n * When using ESBuild, ensure that the virtual module `__STATIC_CONTENT_MANIFEST` is marked as external:\n * ```js\n * import {build} from 'esbuild'\n *\n * build({ external: ['__STATIC_CONTENT_MANIFEST']})\n * ```\n *\n * @see\n *\n * {@link https://developers.cloudflare.com/pages/platform/functions/#advanced-mode Cloudflare Worker Pages API}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WorkersSiteStaticContentBinding "
            }
          ],
          "releaseTag": "Public",
          "name": "WorkersSiteStaticContentBinding",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!WorkersSiteStaticContentBinding#__STATIC_CONTENT:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "__STATIC_CONTENT: "
                },
                {
                  "kind": "Reference",
                  "text": "KVNamespace",
                  "canonicalReference": "!KVNamespace:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "__STATIC_CONTENT",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "keywork!WorkersSiteStaticContentBinding#ASSETS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ASSETS: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ASSETS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
